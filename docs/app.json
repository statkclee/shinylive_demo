[{"name":"app.R","content":"## Simplified app from last week!\nlibrary(shiny)\nlibrary(ggplot2)\n\n## base R!s\nd <- mtcars\nd$car_types <- rownames(d)\nd <- d[,c(\"car_types\",\"mpg\", \"cyl\", \"am\", \"disp\", \"wt\")]\nd$cyl <- as.factor(d$cyl)\nd$am <- as.factor(d$am)\n\n### UI\nui <- fluidPage(\n  \n  title = \"Cars!\",\n  \n  sidebarPanel(\n    \n    selectInput(inputId = \"cyl\",\n                label = \"Cylinders\",\n                choices = sort(unique(d$cyl)),\n                selected = NULL,\n                multiple = FALSE),\n    \n    selectInput(inputId = \"am\",\n                label = \"Transmission\",\n                choices = sort(unique(d$am)),\n                selected = NULL,\n                multiple = FALSE)\n    \n    \n  ),\n  \n  mainPanel(\n    plotOutput(outputId = 'xy_plt'),\n    plotOutput(outputId = \"hist_plt\"),\n    tableOutput(outputId = \"tbl\")\n  )\n)\n\n\n### Server\nserver <- function(input, output, session){\n  \n  ## update based on URL parameters\n  observe({\n\n    query <- parseQueryString(session$clientData$url_search)\n\n    if(!is.null(query[['cyl']])){\n      updateSelectInput(session, \"cyl\", selected = query[['cyl']])\n    }\n\n    if(!is.null(query[['am']])){\n      updateSelectInput(session, \"am\", selected = query[[\"am\"]])\n    }\n  })\n  \n  ## get data\n  dat <- reactive({\n    d[d$cyl == input$cyl & d$am == input$am, ]\n  })\n  \n  ## xy plot\n  output$xy_plt <- renderPlot({\n    \n    dat() |>\n      ggplot(aes(x = disp, y = mpg)) +\n      geom_jitter(size = 5,\n                  color = \"green\") +\n      geom_smooth(method = \"lm\",\n                  se = FALSE,\n                  color = \"black\",\n                  size = 1.2) +\n      theme_light()\n    \n  })\n  \n  ## hist plot\n  output$hist_plt <- renderPlot({\n    \n    dat() |>\n      ggplot(aes(x = \"1\", y = wt)) +\n      geom_boxplot(color = \"black\",\n                   fill = \"light grey\") +\n      theme_light()\n    \n  })\n  \n  ## table of car types\n  output$tbl <- renderTable({\n    dat()[,\"car_types\"]\n  })\n}\n\n\n## Shiny app must return a shinyapp\nshiny::shinyApp(ui = ui, server = server)\n","type":"text"},{"name":"DESCRIPTION","content":"Title: mtcars shiny!\nAuthor: TidyX\nAuthorUrl: https://github.com/thebioengineer/TidyX\nLicense: MIT\nDisplayMode: Showcase\n","type":"text"}]
